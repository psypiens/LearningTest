
- git init
Inicia un nuevo repositorio de Git en el directorio actual o convierte un directorio existente en un repositorio de Git.

- git status
Muestra el estado actual del repositorio, incluyendo los cambios realizados, archivos no rastreados y archivos listos para ser confirmados.

- git add <nombredelarchivo>
Agrega un archivo específico al área de preparación (staging), indicando que se debe incluir en el próximo commit.

- git add . 
Agrega todos los archivos modificados y no rastreados al área de preparación, preparándolos para el próximo commit.

- git commit -m "Mensaje del Commit"
Crea un nuevo commit con los cambios en el área de preparación y asigna un mensaje descriptivo que explica los cambios realizados.

- git diff nombredelarchivo
Muestra las diferencias entre el archivo actual y la última versión confirmada, resaltando las líneas que han sido modificadas.

- git checkout nombredelarchivo
Descarta los cambios locales no confirmados en un archivo específico, restaurando la versión más reciente confirmada. También se utiliza para cambiar entre ramas o commits.

- git remote add origin <url>
Añade un nuevo remoto llamado "origin" con la URL especificada. Un remoto es una referencia a un repositorio remoto, como un repositorio en GitHub.

- git branch -M main
Renombra la rama actual a "main". Este comando se utiliza comúnmente después de realizar un cambio en la configuración predeterminada de la rama principal (anteriormente llamada "master").

- git push -u <remote name> <branch name>
Sube los cambios locales al remoto especificado. El argumento "-u" establece la conexión entre la rama local y la rama remota, estableciendo la rama remota como rama de seguimiento de la rama local. Esto es útil para futuros comandos "git push" y "git pull", ya que Git recordará la relación entre la rama local y remota

- git branch <nombre branch>:
Crea una nueva rama (branch) con el nombre especificado. Esta rama se creará a partir de la rama actual en la que te encuentras, conservando el estado actual del código.

- git branch:
Muestra una lista de ramas disponibles en el repositorio. La rama actual se resalta y se indica con un asterisco (*).

- git checkout <nombre branch>:
Cambia al branch especificado, actualizando el directorio de trabajo con los archivos de ese branch. Se utiliza para cambiar entre ramas y trabajar en diferentes líneas de desarrollo.

- git merge <nombre branch>:
Combina los cambios de la rama especificada en la rama actual. Este comando realiza la fusión de los cambios y puede generar un nuevo commit de fusión si es necesario reconciliar diferencias entre las ramas.

- :q!:
Este comando se utiliza en el editor de texto Vim para salir del modo de edición sin guardar cambios. El : indica que se está ingresando un comando, y q! significa salir sin guardar. Este comando es útil cuando te encuentras en una situación no deseada dentro de Vim y deseas salir sin guardar.

